-- JUSTIFICATIVA: CALCULO DA MEDIA DE LEADS APROVADOS NOS RELATORIOS
SELECT AVG(leadsAprovados) AS mediaLeadsAprovados
FROM RELATORIO;

-- JUSTIFICATIVA: EXIBIR CLIENTES PRESENTES EM MAIS DE UM LEAD E O TOTAL POR CLIENTE
SELECT clienteId, COUNT(*) AS totalLeads
FROM LEAD
GROUP BY clienteId
HAVING COUNT(*) > 1;

-- JUSTIFICATIVA: EXIBIR DECRESCENTEMENTE O TOTAL DE VENDAS POR FUNCIONARIO
SELECT funcionarioId, COUNT(*) AS totalVendas
FROM VENDA
GROUP BY funcionarioId
ORDER BY totalVendas DESC;

-- JUSTIFICATIVA: EXIBIR OS CLIENTES E SEUS RESPECTIVOS LEADS
SELECT CLIENTE.descricao as clienteNome, LEAD.id as leadId
FROM CLIENTE
JOIN LEAD ON CLIENTE.id = LEAD.clienteId;

-- JUSTIFICATIVA: EXIBIR O ENDEREÇO DOS CLIENTES
SELECT CLIENTE.id as clienteId, ENDERECO.rua, ENDERECO.numero, BAIRRO.nome as bairro, CIDADE.nome as cidade
FROM CLIENTE
JOIN ENDERECO ON CLIENTE.id = ENDERECO.clienteId
JOIN BAIRRO ON ENDERECO.bairroId = BAIRRO.id
JOIN CIDADE ON BAIRRO.cidadeId = CIDADE.id;

-- JUSTIFICATIVA: EXIBIR O VALOR MÉDIO DE VENDAS POR CLIENTE
SELECT CLIENTE.descricao as nome, AVG(VENDA.valorVenda) as valorMedioVendas, count(venda.id) as numVendas
FROM CLIENTE
LEFT JOIN VENDA ON CLIENTE.id = VENDA.clienteId
GROUP BY CLIENTE.id;

-- JUSTIFICATIVA: VERIFICAR OS FUNCIONARIOS QUE REALIZARAM VENDAS DENTRO DO PERIODO
SELECT FUNCIONARIO.nome, VENDA.dataVenda
FROM VENDA
RIGHT JOIN FUNCIONARIO ON FUNCIONARIO.id = VENDA.funcionarioId
WHERE VENDA.dataVenda BETWEEN '2024-01-01' AND '2024-04-31' or VENDA.dataVenda IS NULL;

-- JUSTIFICATIVA: BUSCA DOS LEADS ATIVOS COM CADASTRO EM SAO PAULO FEITOS ANTES DE 2024
SELECT LEAD.id, LEAD.dataCadastro, LEAD.status, LEAD.categoriaId, LEAD.clienteId, CIDADE.nome
FROM LEAD
JOIN CLIENTE ON LEAD.clienteId = CLIENTE.id
JOIN ENDERECO ON CLIENTE.id = ENDERECO.clienteId
JOIN BAIRRO ON ENDERECO.bairroId = BAIRRO.id
JOIN CIDADE ON BAIRRO.cidadeId = CIDADE.id
WHERE LEAD.status = 'Ativo' AND LEAD.dataCadastro < '2024-01-01' AND CIDADE.nome = 'São Paulo';

-- JUSTIFICATIVA: EXIBIR TODOS OS TELEFONES ATIVOS, NÃO NULOS E QUE NAO SEJAM DA BAHIA
SELECT CLIENTE.descricao AS nome, ESTADO.nome, CLIENTE.status, TELEFONE.numero
FROM CLIENTE
JOIN ENDERECO ON CLIENTE.id = ENDERECO.clienteId
JOIN BAIRRO ON BAIRRO.id = ENDERECO.bairroId
JOIN CIDADE ON CIDADE.id = BAIRRO.cidadeId
join ESTADO on ESTADO.id = CIDADE.estadoId
JOIN TELEFONE ON CLIENTE.id = TELEFONE.clienteId
WHERE CLIENTE.status = 'Ativo' AND TELEFONE.numero IS NOT NULL AND ESTADO.nome != 'Bahia';

-- JUSTIFICATIVA: EXIBIR A QUANTIDADE DE CLIENTES DISTINTOS QUE POSSUEM REUNIÕES AGENDADAS
SELECT COUNT(DISTINCT REUNIAO.clienteId) AS clientesDistintos
FROM REUNIAO
JOIN CLIENTE ON REUNIAO.clienteId = CLIENTE.id
WHERE REUNIAO.status = 'Agendada';